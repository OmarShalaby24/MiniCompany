// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniCompnay.Data;

namespace MiniCompnay.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20210808104436_tmp")]
    partial class tmp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmployeeModelEmployeeSkillModel", b =>
                {
                    b.Property<int>("EmployeeSkillsID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeesID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeSkillsID", "EmployeesID");

                    b.HasIndex("EmployeesID");

                    b.ToTable("EmployeeModelEmployeeSkillModel");
                });

            modelBuilder.Entity("EmployeeSkillModelSkillModel", b =>
                {
                    b.Property<int>("EmployeeSkillsID")
                        .HasColumnType("int");

                    b.Property<int>("SkillsID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeSkillsID", "SkillsID");

                    b.HasIndex("SkillsID");

                    b.ToTable("EmployeeSkillModelSkillModel");
                });

            modelBuilder.Entity("MiniCompnay.Models.EmployeeModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("ID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Email = "John@gmail.com",
                            Name = "John"
                        });
                });

            modelBuilder.Entity("MiniCompnay.Models.EmployeeSkillModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("SkillID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("EmployeeSkills");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            EmployeeID = 1,
                            SkillID = 1
                        });
                });

            modelBuilder.Entity("MiniCompnay.Models.SkillModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "ASP"
                        },
                        new
                        {
                            ID = 2,
                            Name = "PHP"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Database"
                        });
                });

            modelBuilder.Entity("EmployeeModelEmployeeSkillModel", b =>
                {
                    b.HasOne("MiniCompnay.Models.EmployeeSkillModel", null)
                        .WithMany()
                        .HasForeignKey("EmployeeSkillsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniCompnay.Models.EmployeeModel", null)
                        .WithMany()
                        .HasForeignKey("EmployeesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeSkillModelSkillModel", b =>
                {
                    b.HasOne("MiniCompnay.Models.EmployeeSkillModel", null)
                        .WithMany()
                        .HasForeignKey("EmployeeSkillsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniCompnay.Models.SkillModel", null)
                        .WithMany()
                        .HasForeignKey("SkillsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
